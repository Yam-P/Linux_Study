$ tail 파일명 -F
: 파일의 값 수정시, cli 창에서 실시간 확인
: 보통 디버깅 시 사용. 
(-f: 파일이 지워지고 새로 생길 때는 반영 안함)

$ wc 파일명
: 파일의 라인, 단어 수, 크기 파악.
: 파일명을 여러개 사용하면 합한 크기 파악.
(ex, /etc/passwd  경우, 몇개 pw가 있는지 파악)
wc -l 파일명: 줄번호만 필요한 경우 사용

$ nl -ba 파일명
: 공백을 포함한 라인넘버 출력.
$ cat/head/tail | nl 
: 필요한 부분의 라인넘버 함께 출력
(nl 파일명: 공백을 제외한 라인넘버 출력)

$ sort 파일명
: 가장 첫글자 기준 오름차순 정렬.
: 앞글자가 더 크므로 91 > 123
$ cat /etc/passwd | sort -t: -k 3,3 -n
: ':' 기준으로 3,3기준으로(세번째 열) 정렬.
: -t는 기준 설정, -k는 몇번째 칼럼인지 설정
: -n은 숫자변환 후 정렬. 123 > 91
$ cat /etc/passwd | sort -t: -k 3,3 -n --debug
: 어떤 기준으로 정렬된지 보여줌
$ ls -al /etc | head -n 20 | sort -k 5,5 -n
: 파일의 크기 기준으로 정렬
$ sort /etc/passwd | sort -t: -k 3,3 -k 1,1 -n
: 세번째 열 기준으로 정렬 후 첫번째 기준으로
: 숫자가 같은 경우, 그 다음 세부 옵션 선택

$ uniq 파일명
: 중복된 애들 출력 안함. 연속적인 애들만 처리
$ sort 파일명 | uniq | nl
: 따라서, sort와 같이 사용하는 것이 유리
: -i 대소문자 구분x, -d 중복된 내용만 출력
$ grep 찾을문자 *.c | awk -F: '{print $1}' | uniq
: 찾을 문자가 있는 c파일들 중복되지 않게 출력
: 해당 헤더파일 사용 안하는 애들 고를 때 쓸 수 있겠다


